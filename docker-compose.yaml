version: "3.3"

services:
  mosquitto:
    container_name: mosquitto-srv
    image: eclipse-mosquitto:latest
    restart: always
    ports:
      - "1883:1883"
    networks:
      - iot
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/mosquitto.log:/etc/mosquitto/mosquitto.log
      - ./mosquitto/certs/:/etc/mosquitto/certs/
      - ./mosquitto/data:/mosquitto/data

  
  influxdb:
    image: influxdb:1.8
    restart: always
    ports:
      - "8086:8086"
    networks:
      - iot
    volumes:
      - /root/projetoDados/influxdb/:/var/lib/influxdb/
  
  telegraf:
    image: telegraf
    restart: always
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf

    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot
  
  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - iot
    volumes:
      - ./grafana/fullchain.pem:/etc/grafana/fullchain.pem
      - ./grafana/privkey.pem:/etc/grafana/privkey.pem
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dados:/var/lib/grafana
    depends_on:
      - influxdb

        #postgres:
        #image: postgres
        #environment:
        #- POSTGRES_USER=postgres
        #- POSTGRES_PASSWORD=postgres
        #- PGDATA=/data/postgres
        #- APP_DB_USER=docker
        #- APP_DB_PASS=docker
        #- APP_DB_NAME=mqtt
        #- DB_HOST=postgres


        #volumes:
        #- ../projeto_dados/postgres:/var/lib/postgresql/data
        #ports:
        #- "5432:5432"
        #networks:
        #- iot
        #restart: unless-stopped

  postgresrv:
    container_name: postgres-srv
    image: postgres
    environment:
      - POSTGRES_DB=MQTTbee
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    restart: always
    networks:
      - iot


  mqtt2psql:
    image: python-psql-mqtt
    restart: always
    volumes: 
      - ./scripts/mqtt2psql:/app
    networks:
      - iot
        #    RUN pip install --upgrade pip && pip3 install paho-mqtt && pip3 install psycopg2    

  ntp: 
    image: cturra/ntp:latest 
    container_name: ntp 
    restart: always 
    ports: 
      - 123:123/udp 
    environment:  
      - NTP_SERVERS=time.cloudflare.com 
      - LOG_LEVEL=0

networks:
  iot:

